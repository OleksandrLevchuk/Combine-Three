[gd_scene load_steps=5 format=3 uid="uid://drjvpsepkhyqj"]

[ext_resource type="PackedScene" uid="uid://cakkjmb01b3cp" path="res://tile.tscn" id="1_l7wyt"]

[sub_resource type="GDScript" id="GDScript_1wurf"]
resource_name = "main"
script/source = "extends Control


enum Colors { Red, Green }
var column := [ 0,0,1,1,0,1 ] # масив з якого створюватимемо плитки в колонці
var tile_scene := preload(\"res://tile.tscn\") # берем зразок плитки
var GRID_GAP := 10 # відстань між плитками
@onready var GRID_SIZE :int = tile_scene.instantiate().size.x # розмір плиток
@onready var SCREEN_BOTTOM := DisplayServer.window_get_size().y # низ екрана
var tiles: Array
var mobile_scale: int = 1


func _ready(): # тут починається гра
	if OS.has_feature(\"web_android\"):
		mobile_scale = 2
		GRID_SIZE *= mobile_scale
		GRID_GAP *= mobile_scale
	for i in column.size(): # ідемо циклом по кожному елементі в масиві
		var tile = tile_scene.instantiate() #створює плитку
		var color = \"RED\" if column[i]==0 else \"GREEN\"
		tile.size *= mobile_scale
		tile.row = i
		tile.color = color
		tile.text = color #ставить текст плитки
		tile.position = calc_position( i )

		
		add_child( tile ) #додає плитку в дерево об'єктів
		tiles.push_back( tile )


func on_tile_moved( tile, destination ):
	var row = tile.row
	var color = tile.color
	prints(\"moving tile \", row, 'color:', color, 'to', destination )
	if destination not in range(0,tiles.size()):
		print(\"forbidden move\")
		return
	if color==tiles[destination].color:
		print('same color')
		return
	var direction = 1 if destination>row else -1
	prints('start', destination, 'direction', direction)
	var streak = 1
	var end = destination + direction
	while end in range(0,tiles.size()) and tiles[end].color == color:
		prints('next id', end, 'has color', tiles[end].color)
		streak += 1
		end += direction
	prints( \"checking streaks starting at:\", destination, \"streak:\", streak )
	if streak < 3: return
	var second_tile = tiles[ destination ]
	tiles[ tile.row ] = second_tile
	second_tile.row = tile.row
	create_tween().tween_property( second_tile, 'position', calc_position(destination), .5 )
#	tiles[ tile.row ].tween_property
	var streak_bottom = min(destination,end)
	prints('removing streak from', streak_bottom )
	for i in streak:
		var popped_tile = tiles.pop_at(streak_bottom)
		prints('popping tile', streak_bottom, 'color', popped_tile.color)
		popped_tile.queue_free()
	for i in range(destination+1, tiles.size()):
		tiles[i].position.y += ( GRID_SIZE + GRID_GAP ) * streak
	print(tiles.map(func(tile): return tile.color))


func calc_position( i ):
	# задати положення плитки, відступивши 10 пікс зліва і знизу екрана
	# відступити вверх на стільки клітинок, який номер в масиві
	return Vector2( GRID_GAP, SCREEN_BOTTOM - (i+1) * ( GRID_GAP + GRID_SIZE ) )"

[sub_resource type="GDScript" id="GDScript_c442r"]
script/source = "extends Polygon2D


func _ready():
	if not OS.has_feature(\"movie\"): queue_free()
	visible = true


func _process(_delta):
	position = get_global_mouse_position()
"

[sub_resource type="GDScript" id="GDScript_38kav"]
script/source = "extends Polygon2D


func _ready():
	if not OS.has_feature(\"movie\"): queue_free()


func _process(_delta):
	position = get_global_mouse_position()


func _input(event):
	if event is InputEventMouseButton:
		visible = event.pressed
"

[node name="Main" type="Control"]
layout_mode = 3
anchors_preset = 0
script = SubResource("GDScript_1wurf")
metadata/_edit_lock_ = true

[node name="Tile" parent="." instance=ExtResource("1_l7wyt")]
visible = false
layout_mode = 0

[node name="cursor" type="Polygon2D" parent="."]
visible = false
scale = Vector2(2, 2)
polygon = PackedVector2Array(0, 0, 9, 5, 6, 7, 4, 10)
script = SubResource("GDScript_c442r")
metadata/_edit_lock_ = true

[node name="click" type="Polygon2D" parent="."]
visible = false
scale = Vector2(2, 2)
color = Color(1, 1, 1, 0.501961)
polygon = PackedVector2Array(-5, -4, -4, -5, 0, -6, 4, -5, 5, -4, 6, 0, 5, 4, 4, 5, 0, 6, -4, 5, -5, 4, -6, 0)
script = SubResource("GDScript_38kav")
metadata/_edit_lock_ = true
